[{"E:\\react-app2\\src\\index.js":"1","E:\\react-app2\\src\\reportWebVitals.js":"2","E:\\react-app2\\src\\components\\Contact.js":"3","E:\\react-app2\\src\\components\\Contactinfo.js":"4","E:\\react-app2\\src\\App.js":"5","E:\\react-app2\\src\\components\\ContactDetails.js":"6","E:\\react-app2\\src\\components\\Counter.js":"7"},{"size":150,"mtime":1607255665446,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2996,"mtime":1607949274465,"results":"11","hashOfConfig":"9"},{"size":445,"mtime":1607836808978,"results":"12","hashOfConfig":"9"},{"size":704,"mtime":1607778876030,"results":"13","hashOfConfig":"9"},{"size":1038,"mtime":1607845906627,"results":"14","hashOfConfig":"9"},{"size":797,"mtime":1607438149769,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jzs4v9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"E:\\react-app2\\src\\index.js",[],["36","37"],"E:\\react-app2\\src\\reportWebVitals.js",[],["38","39"],"E:\\react-app2\\src\\components\\Contact.js",["40"],"import React from 'react';\r\nimport Contactinfo from './Contactinfo';\r\nimport ContactDetails from './ContactDetails';\r\nimport update from 'react-addons-update';\r\n\r\nclass Contact extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKey: -1,\r\n      keyword:'',\r\n      contactData:[\r\n        {name:'Abet', phone:'010-0000-0001', address:'통영시'},\r\n        {name:'Betty', phone:'010-0000-0002', address:'거제시'},\r\n        {name:'Charlie', phone:'010-0000-0003', address:'고성시'},\r\n        {name:'David', phone:'010-0000-0004', address:'거제시'},\r\n        {name:'Eleanor', phone:'010-0000-0005', address:'통영시'}\r\n      ]\r\n    };\r\n\r\n    this.keywordChange = this.keywordChange.bind(this);\r\n    this.choiceChange = this.choiceChange.bind(this);\r\n    this.handleCreate = this.handleCreate.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n  }\r\n\r\n  keywordChange(e) {\r\n    this.setState({\r\n      keyword:e.target.value\r\n    });\r\n  }\r\n  \r\n  choiceChange(key) {\r\n    this.setState({\r\n      selectedKey: key\r\n    });\r\n    console.log(key, '번이 선택되었습니다!');\r\n  }\r\n\r\n  handleCreate(contact) {\r\n    this.setState({\r\n      contactData: update(this.state.contactData,\r\n         {$push: [contact]}\r\n        )\r\n    });\r\n  }\r\n\r\n  handleRemove() {\r\n    this.setState({\r\n      contactData: update(this.state.contactData,\r\n        { $splice: [[this.state.selectedKey, 1]]}  \r\n      ), \r\n      selectedKey: -1\r\n    });\r\n  }\r\n\r\n  handleEdit(name, phone, address) {\r\n    this.setState({\r\n      contactData: update(this.state.contactData, \r\n        {\r\n          [this.state.selectedKey]: {\r\n            name: { $set: name},\r\n            phone: { $set: phone},\r\n            address: { $set: address}\r\n          }\r\n        }  \r\n      )\r\n    });\r\n  }\r\n\r\n  render() {  \r\n    \r\n    // 시작 : 콜백함수를 이용한 배열의 재정의(반복문 효과와 동일)\r\n    const mapToComponent = (data) => {\r\n      data.sort();\r\n      data = data.filter(\r\n        (contact) => {\r\n          return contact.name.toLowerCase()\r\n                .indexOf(this.state.keyword.toLowerCase()) > -1;\r\n        }\r\n      );\r\n      return data.map((contact, i) => {\r\n        return (<Contactinfo \r\n                  contact={contact}\r\n                  key={i}\r\n                  onClick={() => this.choiceChange(i)}\r\n              />);\r\n      });\r\n    };\r\n    // 끝\r\n\r\n    return (\r\n      <div>\r\n        <h1>Contacts</h1>\r\n        <input           \r\n          name=\"keyword\"\r\n          placeholder=\"검색\"\r\n          value={this.state.keyword}\r\n          onChange={this.keywordChange}\r\n        />\r\n        <div>{mapToComponent(this.state.contactData)}</div>    \r\n        <ContactDetails \r\n            isSelected={this.state.selectedKey != -1}\r\n            contact={this.state.contactData[this.state.selectedKey]}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Contact;","E:\\react-app2\\src\\components\\Contactinfo.js",[],"E:\\react-app2\\src\\App.js",[],"E:\\react-app2\\src\\components\\ContactDetails.js",[],["41","42"],"E:\\react-app2\\src\\components\\Counter.js",["43","44"],"import React from 'react';\r\n\r\nclass Counter extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value:0\r\n    };\r\n  }\r\n\r\n  handleClick1() {\r\n    this.setState({\r\n      value:this.state.value + 1\r\n    });\r\n  }\r\n\r\n  handleClick2() {\r\n    this.setState({\r\n      value:this.state.value - 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.value > 0) {\r\n      var value = this.state.value + 1\r\n    } else if(this.state.value < 0) {\r\n      this.state.value = 0\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n        <p>{this.state.value}</p>\r\n        <button onClick={this.handleClick1.bind(this)}>▲</button>\r\n        <button onClick={this.handleClick2.bind(this)}>▼</button>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Counter;",["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":105,"column":48,"nodeType":"55","messageId":"56","endLine":105,"endColumn":50},{"ruleId":"47","replacedBy":"57"},{"ruleId":"49","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":27,"column":11,"nodeType":"61","messageId":"62","endLine":27,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":29,"column":7,"nodeType":"65","endLine":29,"endColumn":17},{"ruleId":"47","replacedBy":"66"},{"ruleId":"49","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["68"],["69"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["68"],["69"],"no-global-assign","no-unsafe-negation"]